{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/AllPosts/AllPosts.js","pages/PostsPage/PostsPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","AllPosts","posts","allPosts","useState","offers","scrollToStart","window","scrollTo","arrOffer","i","rand","Math","floor","random","length","push","toArray","Set","HeadPage","title","description","className","s","content","map","post","post__card","key","_id","to","onClick","post__title","post__date","Date","date","toUTCString","card__image","src","imgUrl","post__image","alt","card__text","post__text","post__btn","adds","add__container","adds__title","offer","offer__item","offer__title","error_container","PostsPage","setPosts","useHttp","loading","request","currentPage","setCurrentPage","postsPerPage","getPosts","useCallback","a","fetched","reverse","useEffect","Loader","indexOfLastPost","indexOfFirstPost","currentPosts","slice","Pagination","perPage","total","paginate","pageNumber"],"mappings":"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","file":"static/js/14.10f743e3.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport s from '../styles/all.module.scss'\r\nimport HeadPage from '../HeadPage/HeadPage';\r\n\r\nconst AllPosts = ({ posts, allPosts }) => {\r\nconst [offers] = useState(5);\r\n\r\n    function arrayRandElement(arr) {\r\n        var rand = Math.floor(Math.random() * arr.length);\r\n        return arr[rand];\r\n    }\r\n\r\n\r\n    const scrollToStart = ()=>{\r\n        window.scrollTo(0,0)\r\n    }\r\n\r\n    let arrOffer = []\r\n        for(let i=0; i < offers; i++){\r\n            let rand = arrayRandElement(allPosts)\r\n            if(arrOffer.length < offers){ \r\n                arrOffer.push(rand)\r\n                \r\n            }\r\n            let set = new Set(arrOffer)// позволяет отсортировать дубликаты\r\n            let toArray = [...set]\r\n            arrOffer = [...toArray]\r\n            \r\n        }\r\n    \r\n\r\n    if (!posts.length) {\r\n        return <div className={s.error_container}>\r\n            <h2>Что-то пошло не так</h2>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n                <HeadPage title='Новости из мира ИТ' description='Все самые актуальные новости мира высоких технологий. Интересные новинки и обзоры из мира IT, Hi-Tech и технологий будущего. Цифровые технологии в жизни и бизнесе. Новости, аналитика, обзоры и прогнозы рынка IT и телекоммуникаций.'/>\r\n            <div className={`container row ${s.content}`}>\r\n                <div className={`col s12 l7 xl8 offset-l1 offset-xl1 offset-s0`}>\r\n                    {posts.map(post => (\r\n                        <div className={` ${s.post__card}`} key={post._id}>\r\n                            <Link to={`/posts/${post._id}`} onClick={scrollToStart} className={s.post__title}>{post.title}</Link>\r\n                            <p className={s.post__date}><strong>{new Date(post.date).toUTCString()}</strong></p>\r\n                            <div className={`${s.card__image}`}>\r\n                                <img src={post.imgUrl} className={s.post__image} alt={post.title}/>\r\n                            </div>\r\n                            <div className={`${s.card__text}`}>\r\n                                <p className={s.post__text}>{post.description}</p>\r\n                            </div>\r\n                            <Link to={`/posts/${post._id}`} className={s.post__btn} onClick={scrollToStart}>Читать дальше</Link>\r\n                        </div>\r\n\r\n                    ))}\r\n                </div>\r\n\r\n\r\n                <div className={`col s12 l4 xl3 ${s.adds}`}>\r\n                    <div className={`${s.add__container}`}>\r\n                        <p className={s.adds__title}>Вам могут быть интересны</p>\r\n                        <ul className={s.offer}>\r\n                        {arrOffer.map(post => (\r\n                        <li  className={s.offer__item} key={post._id}>\r\n                            <Link to={`/posts/${post._id}`} className={s.offer__title} onClick={scrollToStart}>{post.title}</Link>\r\n\r\n                        </li>\r\n\r\n                    ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPosts;\r\n\r\n\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport AllPosts from '../../components/AllPosts/AllPosts';\r\nimport Pagination from '../../components/Pagination/Pagination';\r\n\r\nexport const PostsPage = () => {\r\n    const [posts,setPosts] = useState([])\r\n    const {loading,request} = useHttp()\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(3);// указывает сколько постов будет на 1 странице\r\n\r\n\r\n    const getPosts = useCallback(async()=>{\r\n        try{\r\n            const fetched = await request('/api/post','GET',null)\r\n            setPosts(fetched.reverse())\r\n        }catch{}\r\n    },[request])\r\n\r\n    useEffect(()=>{\r\n        getPosts()\r\n    },[getPosts])\r\n\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n\r\n    //get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage\r\n    const currentPosts = posts.slice(indexOfFirstPost,indexOfLastPost)\r\n\r\n\r\n    const paginate= (pageNumber)=> {\r\n        window.scrollTo(0,0)\r\n        setCurrentPage(pageNumber)\r\n    }\r\n    \r\n    return (\r\n        <div className='content'>\r\n            {!loading && \r\n            \r\n                <AllPosts posts={currentPosts} allPosts={posts}/>\r\n                \r\n            \r\n            }\r\n            {!loading && posts && <Pagination perPage={postsPerPage} total={posts.length} paginate={paginate} currentPage={currentPage}/> }\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"sourceRoot":""}
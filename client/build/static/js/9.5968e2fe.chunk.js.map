{"version":3,"sources":["pages/PostsPage/PostsPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","hooks/http.hook.js","../node_modules/regenerator-runtime/runtime.js","components/Pagination/Pagination.js","components/Pagination/pagination.module.scss"],"names":["AllPosts","lazy","PostsPage","useState","posts","setPosts","useHttp","loading","request","currentPage","setCurrentPage","postsPerPage","getPosts","useCallback","a","fetched","reverse","useEffect","indexOfLastPost","indexOfFirstPost","currentPosts","slice","className","fallback","allPosts","perPage","total","length","paginate","pageNumber","window","scrollTo","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","setLoading","setError","url","method","body","headers","JSON","stringify","fetch","res","json","data","ok","Error","message","clearError","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","Pagination","pageNumbers","Math","ceil","s","pagination_container","pagination_list","style","display","onClick","to","map","num","index"],"mappings":"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","file":"static/js/9.5968e2fe.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, lazy, Suspense  } from 'react';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport Pagination from '../../components/Pagination/Pagination';\r\n\r\nconst AllPosts = lazy(()=> import('../../components/AllPosts/AllPosts'));\r\n\r\nexport const PostsPage = () => {\r\n    const [posts,setPosts] = useState([])\r\n    const {loading,request} = useHttp()\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(3);// указывает сколько постов будет на 1 странице\r\n\r\n\r\n    const getPosts = useCallback(async()=>{\r\n        try{\r\n            const fetched = await request('/api/post','GET',null)\r\n            setPosts(fetched.reverse())\r\n        }catch{}\r\n    },[request])\r\n\r\n    useEffect(()=>{\r\n        getPosts()\r\n    },[getPosts])\r\n\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n\r\n    //get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage\r\n    const currentPosts = posts.slice(indexOfFirstPost,indexOfLastPost)\r\n\r\n\r\n    const paginate= (pageNumber)=> {\r\n        window.scrollTo(0,0)\r\n        setCurrentPage(pageNumber)\r\n    }\r\n    \r\n    return (\r\n        <div className='content'>\r\n            {!loading && \r\n            <Suspense fallback={<Loader/>}>\r\n                <AllPosts posts={currentPosts} allPosts={posts}/>\r\n            </Suspense>\r\n                \r\n            \r\n            }\r\n            {!loading && posts && <Pagination perPage={postsPerPage} total={posts.length} paginate={paginate} currentPage={currentPage}/> }\r\n        </div>\r\n    );\r\n}\r\n\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            \r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n\r\n            const res = await fetch(url, { method, body, headers })\r\n            const data = await res.json()\r\n\r\n            if (!res.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n            setLoading(false)\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    },[])\r\n    const clearError = useCallback(() => setError(null), [])\r\n    return { loading, request, error, clearError }\r\n}\r\n\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport s from './pagination.module.scss'\r\n\r\nconst Pagination = ({ perPage, total, paginate, currentPage}) => {\r\n\r\n    const pageNumbers = []\r\n\r\n    for (let i = 1; i <= Math.ceil(total / perPage); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className='container row'>\r\n            <div className={`container col l8 offset-l1 ${s.pagination_container}`}>\r\n                <ul className={`pagination ${s.pagination_list}`}>\r\n                <li className=\"waves-effect\"  style={{display: currentPage < 2 ? 'none' : 'inline-block'}}><Link onClick={() => paginate(currentPage - 1)} to=\"#!\"><i className=\"material-icons\">chevron_left</i></Link></li>\r\n                    {pageNumbers.map((num, index) => (\r\n                        <li className=\"waves-effect\" key={index}>\r\n                            <Link onClick={() => paginate(num)} to=\"#!\">{num}</Link>\r\n                        </li>\r\n                    ))}\r\n                <li className=\"waves-effect\" style={{display: currentPage < pageNumbers.length ? 'inline-block' : 'none'}}><Link onClick={() => paginate(currentPage + 1)} to=\"#!\"><i className=\"material-icons\">chevron_right</i></Link></li>\r\n\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n\r\n//Метод Math.ceil() - округление вверх. Округляет аргумент до ближайшего большего целого.","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination_container\":\"pagination_pagination_container__23JmZ\"};"],"sourceRoot":""}
{"version":3,"sources":["components/Resorces/AllResources/AllResources.js","pages/Resources/Resources/Resources.js"],"names":["AllResources","res","scrollToStart","window","scrollTo","length","HeadPage","title","description","className","s","content","map","resource","post__card","key","_id","to","onClick","post__title","post__date","Date","date","toUTCString","card__image","src","imgUrl","post__image","alt","card__text","post__text","post__btn","adds","add__container","error_container","Resources","useState","resources","setResources","useHttp","request","loading","currentPage","setCurrentPage","resourcesPerPage","indexOfLastResource","indexOfFirstResource","currentResources","slice","getResources","useCallback","a","data","reverse","useEffect","Loader","Pagination","perPage","total","paginate","pageNumber"],"mappings":"+MAkDeA,EA5CM,SAAC,GAAW,IAAVC,EAAS,EAATA,IACbC,EAAgB,WAClBC,OAAOC,SAAS,EAAE,IAEtB,OAAIH,EAAII,OASJ,oCACI,kBAACC,EAAA,EAAD,CAAUC,MAAK,gMAAwCC,YAAY,ysCACnE,yBAAKC,UAAS,wBAAmBC,IAAEC,UAC/B,yBAAKF,UAAS,iDACTR,EAAIW,KAAI,SAAAC,GAAQ,OACb,yBAAKJ,UAAS,WAAMC,IAAEI,YAAcC,IAAKF,EAASG,KAC9C,kBAAC,IAAD,CAAMC,GAAE,qBAAgBJ,EAASG,KAAOE,QAAShB,EAAeO,UAAWC,IAAES,aAAcN,EAASN,OACpG,uBAAGE,UAAWC,IAAEU,YAAY,gCAAS,IAAIC,KAAKR,EAASS,MAAMC,gBAC7D,yBAAKd,UAAS,UAAKC,IAAEc,cACjB,yBAAKC,IAAKZ,EAASa,OAAQjB,UAAWC,IAAEiB,YAAaC,IAAKf,EAASN,SAEvE,yBAAKE,UAAS,UAAKC,IAAEmB,aAC7B,uBAAGpB,UAAWC,IAAEoB,YAAajB,EAASL,cAE9B,kBAAC,IAAD,CAAMS,GAAE,qBAAgBJ,EAASG,KAAOP,UAAWC,IAAEqB,UAAWb,QAAShB,GAAzE,kFAOZ,yBAAKO,UAAS,yBAAoBC,IAAEsB,OAChC,yBAAKvB,UAAS,UAAKC,IAAEuB,iBACjB,+EA/BT,yBAAKxB,UAAWC,IAAEwB,iBACzB,gI,QCkCOC,UAxCG,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACbC,EADa,KACFC,EADE,OAEMC,cAAnBC,EAFa,EAEbA,QAAQC,EAFK,EAELA,QAFK,EAGkBL,mBAAS,GAH3B,mBAGbM,EAHa,KAGAC,EAHA,OAIOP,mBAAS,GAA7BQ,EAJa,oBAOdC,EAAsBH,EAAcE,EACpCE,EAAuBD,EAAsBD,EAC7CG,EAAmBV,EAAUW,MAAMF,EAAqBD,GAQxDI,EAAeC,sBAAW,sBAAC,4BAAAC,EAAA,+EAENX,EAAQ,iBAAiB,MAAM,MAFzB,OAEnBY,EAFmB,OAGzBd,EAAac,EAAKC,WAHO,uGAK/B,CAACb,IAMH,OAJAc,qBAAU,WACNL,MACF,CAACA,IAEAR,EACQ,kBAACc,EAAA,EAAD,MAIP,yBAAK9C,UAAU,YACTgC,GAAW,kBAAC,EAAD,CAAcxC,IAAK8C,KAC9BN,GAAWJ,GAAa,kBAACmB,EAAA,EAAD,CAAYC,QAASb,EAAkBc,MAAOrB,EAAUhC,OAAQsD,SAvBlF,SAACC,GACbzD,OAAOC,SAAS,EAAE,GAClBuC,EAAeiB,IAqBmGlB,YAAaA","file":"static/js/15.e71c1b9d.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from '../../styles/all.module.scss'\r\nimport { Link } from 'react-router-dom';\r\nimport HeadPage from '../../HeadPage/HeadPage';\r\n\r\n\r\nconst AllResources = ({res}) => {\r\n    const scrollToStart = ()=>{\r\n        window.scrollTo(0,0)\r\n    }\r\n    if(!res.length){\r\n        return <div className={s.error_container}>\r\n        <h2>Что-то пошло не так</h2>\r\n    </div>\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <HeadPage title={`Полезные ресурсы для разработчиков`} description='В этом разделе мы подготовили для вас подборку полезных материалов для веб разработчиков. Мы собрали для вас коллекцию самых необходимых инструментов и ресурсов, с помощью которых вы узнаете, как делать все быстрее и быть продуктивнее.'/>\r\n            <div className={`container row ${s.content}`}>\r\n                <div className={`col s12 l7 xl8 offset-l1 offset-xl1 offset-s0`}>\r\n                    {res.map(resource => (\r\n                        <div className={` ${s.post__card}`} key={resource._id}>\r\n                            <Link to={`/resources/${resource._id}`} onClick={scrollToStart} className={s.post__title}>{resource.title}</Link>\r\n                            <p className={s.post__date}><strong>{new Date(resource.date).toUTCString()}</strong></p>\r\n                            <div className={`${s.card__image}`}>\r\n                                <img src={resource.imgUrl} className={s.post__image} alt={resource.title}/>\r\n                            </div>\r\n                            <div className={`${s.card__text}`}>\r\n                    <p className={s.post__text}>{resource.description}</p>\r\n                            </div>\r\n                            <Link to={`/resources/${resource._id}`} className={s.post__btn} onClick={scrollToStart}>Читать дальше</Link>\r\n                        </div>\r\n\r\n                    ))}\r\n                </div>\r\n\r\n\r\n                <div className={`col s12 l4 xl3 ${s.adds}`}>\r\n                    <div className={`${s.add__container}`}>\r\n                        <div>Речлама</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllResources;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport Loader from '../../../components/Loader/Loader';\r\nimport AllResources from '../../../components/Resorces/AllResources/AllResources';\r\nimport Pagination from '../../../components/Pagination/Pagination';\r\n\r\nconst Resources = () => {\r\n    const [resources, setResources] = useState([]);\r\n    const {request,loading} = useHttp()\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [resourcesPerPage] = useState(2);// указывает сколько постов будет на 1 странице\r\n\r\n\r\n    const indexOfLastResource = currentPage * resourcesPerPage\r\n    const indexOfFirstResource = indexOfLastResource - resourcesPerPage\r\n    const currentResources = resources.slice(indexOfFirstResource,indexOfLastResource)\r\n\r\n\r\n    const paginate= (pageNumber)=> {\r\n        window.scrollTo(0,0)\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    const getResources = useCallback(async()=>{\r\n        try{\r\n            const data = await request('/api/resources','GET',null)\r\n            setResources(data.reverse())\r\n        }catch{}\r\n    },[request])\r\n\r\n    useEffect(()=>{\r\n        getResources()\r\n    },[getResources])\r\n\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div className='content'>\r\n            {!loading && <AllResources res={currentResources}/>}\r\n            {!loading && resources && <Pagination perPage={resourcesPerPage} total={resources.length} paginate={paginate} currentPage={currentPage}/> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Resources;\r\n"],"sourceRoot":""}
{"version":3,"sources":["pages/Resources/CreateResources/create.module.scss","pages/Resources/CreateResources/CreateResources.js","hooks/http.hook.js"],"names":["module","exports","CreateResources","auth","useContext","AuthContext","history","useHistory","useState","title","setTitle","image","setImage","text","setText","link","setLink","description","setDescription","request","useHttp","useEffect","window","M","updateTextFields","pressHandler","e","a","preventDefault","length","alert","imgUrl","Authorization","token","data","push","resource","_id","className","s","container","onSubmit","input_container","htmlFor","placeholder","id","type","value","onChange","target","required","textarea_label","event","editor","getData","textarea","ClassicEditor","name","btn","loading","setLoading","error","setError","useCallback","url","method","body","headers","JSON","stringify","fetch","res","json","ok","Error","message","clearError"],"mappings":"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","file":"static/js/12.948c5750.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"create_container__cN2GE\",\"input_container\":\"create_input_container__3yNmK\",\"textarea\":\"create_textarea___6nxt\",\"btn\":\"create_btn__3sDMs\"};","import React, { useState, useEffect, useContext } from 'react';\r\nimport s from './create.module.scss'\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst CreateResources = () => {\r\n     const auth = useContext(AuthContext)\r\n     const history = useHistory()\r\n    const [title, setTitle] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [link, setLink] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const {request} = useHttp() \r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n    const pressHandler = async(e)=>{\r\n        e.preventDefault()\r\n        try{\r\n            if(description.length >= 216){\r\n                alert('Описание не должно быть длиннее 215 символов')\r\n            }else{\r\n                const data = await request('/api/resources/generate','POST',{imgUrl: image, title: title, text: text, link: link,description: description},{\r\n                    Authorization: `Bearer ${auth.token}`\r\n                })\r\n                history.push(`/resources/${data.resource._id}`)\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    const changeText = ( event, editor ) => {\r\n        const data = editor.getData();\r\n        setText(data)\r\n    }\r\n\r\n    return (\r\n        <div className={`row ${s.container}`}>\r\n            <div className={`col l6 offset-l3 col m8 offset-m2 col s12`}>\r\n\r\n            <form onSubmit={pressHandler}>\r\n                    <div className={`input-field ${s.input_container}`}>\r\n                        <label htmlFor=\"title\">Введите Url Картинки</label>\r\n                        <input\r\n                            placeholder=\"Картинка\"\r\n                            className=\"validate\"\r\n                            id=\"image\"\r\n                            type=\"text\"\r\n                            value={image}\r\n                            onChange={e => setImage(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className={`input-field ${s.input_container}`}>\r\n                        <label htmlFor=\"title\">Введите Заголовок</label>\r\n                        <input\r\n                            placeholder=\"Заголовок\"\r\n                            className=\"validate\"\r\n                            id=\"title\"\r\n                            type=\"text\"\r\n                            value={title}\r\n                            onChange={e => setTitle(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className={`input-field ${s.input_container}`}>\r\n                        <label htmlFor=\"description\">Введите Описание</label>\r\n                        <input\r\n                            placeholder=\"Описание\"\r\n                            className=\"validate\"\r\n                            id=\"description\"\r\n                            type=\"text\"\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className={`input-field ${s.input_container}`}>\r\n                        <label htmlFor=\"text\" className = {s.textarea_label}>Введите Текст поста</label>\r\n                        {/* <textarea\r\n                        className = {s.textarea}\r\n                            placeholder=\"Текст поста\"\r\n                            \r\n                            rows=\"10\"\r\n                            cols=\"45\"\r\n                            id=\"text\"\r\n                            type=\"text\"\r\n                            value={text}\r\n                            onChange={e => setText(e.target.value)}\r\n                            required\r\n                        ></textarea> */}\r\n                        <CKEditor onChange={changeText} className={s.textarea} editor={ ClassicEditor } id='text' name='text' value={text} required/>\r\n                        </div>\r\n                        <div className={`input-field ${s.input_container}`}>\r\n                        <label htmlFor=\"link\">Введите Ссылку</label>\r\n                        <input\r\n                            placeholder=\"Ссылка\"\r\n                            className=\"validate\"\r\n                            id=\"link\"\r\n                            type=\"text\"\r\n                            value={link}\r\n                            onChange={e => setLink(e.target.value)}\r\n                        />\r\n                    </div> \r\n                \r\n                    <button type='submit' className={s.btn}>Submit</button>\r\n                </form>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateResources;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            \r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n\r\n            const res = await fetch(url, { method, body, headers })\r\n            const data = await res.json()\r\n\r\n            if (!res.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n            setLoading(false)\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    },[])\r\n    const clearError = useCallback(() => setError(null), [])\r\n    return { loading, request, error, clearError }\r\n}\r\n\r\n"],"sourceRoot":""}